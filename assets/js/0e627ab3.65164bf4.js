"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4255],{6077:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>a,default:()=>g,frontMatter:()=>i,metadata:()=>l,toc:()=>o});var r=n(5893),s=n(1151);const i={sidebar_label:"img_utils",title:"agentchat.contrib.img_utils"},a=void 0,l={id:"reference/agentchat/contrib/img_utils",title:"agentchat.contrib.img_utils",description:"llava\\_formatter",source:"@site/docs/reference/agentchat/contrib/img_utils.md",sourceDirName:"reference/agentchat/contrib",slug:"/reference/agentchat/contrib/img_utils",permalink:"/autogen/docs/reference/agentchat/contrib/img_utils",draft:!1,unlisted:!1,editUrl:"https://github.com/microsoft/autogen/edit/main/website/docs/reference/agentchat/contrib/img_utils.md",tags:[],version:"current",frontMatter:{sidebar_label:"img_utils",title:"agentchat.contrib.img_utils"},sidebar:"referenceSideBar",previous:{title:"gpt_assistant_agent",permalink:"/autogen/docs/reference/agentchat/contrib/gpt_assistant_agent"},next:{title:"llava_agent",permalink:"/autogen/docs/reference/agentchat/contrib/llava_agent"}},c={},o=[{value:"llava_formatter",id:"llava_formatter",level:4},{value:"gpt4v_formatter",id:"gpt4v_formatter",level:4},{value:"extract_img_paths",id:"extract_img_paths",level:4}];function d(t){const e={code:"code",em:"em",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.a)(),...t.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h4,{id:"llava_formatter",children:"llava_formatter"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-python",children:"def llava_formatter(prompt: str,\n                    order_image_tokens: bool = False) -> Tuple[str, List[str]]\n"})}),"\n",(0,r.jsx)(e.p,{children:"Formats the input prompt by replacing image tags and returns the new prompt along with image locations."}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"Arguments"}),":"]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"prompt (str): The input string that may contain image tags like <img ...>."}),"\n",(0,r.jsx)(e.li,{children:"order_image_tokens (bool, optional): Whether to order the image tokens with numbers.\nIt will be useful for GPT-4V. Defaults to False."}),"\n"]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"Returns"}),":"]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Tuple[str, List[str]]: A tuple containing the formatted string and a list of images (loaded in b64 format)."}),"\n"]}),"\n",(0,r.jsx)(e.h4,{id:"gpt4v_formatter",children:"gpt4v_formatter"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-python",children:"def gpt4v_formatter(prompt: str) -> List[Union[str, dict]]\n"})}),"\n",(0,r.jsx)(e.p,{children:"Formats the input prompt by replacing image tags and returns a list of text and images."}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"Arguments"}),":"]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"prompt (str): The input string that may contain image tags like <img ...>."}),"\n"]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"Returns"}),":"]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"List[Union[str, dict]]: A list of alternating text and image dictionary items."}),"\n"]}),"\n",(0,r.jsx)(e.h4,{id:"extract_img_paths",children:"extract_img_paths"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-python",children:"def extract_img_paths(paragraph: str) -> list\n"})}),"\n",(0,r.jsx)(e.p,{children:"Extract image paths (URLs or local paths) from a text paragraph."}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"Arguments"}),":"]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"paragraph"})," ",(0,r.jsx)(e.em,{children:"str"})," - The input text paragraph."]}),"\n"]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"Returns"}),":"]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"list"})," - A list of extracted image paths."]}),"\n"]})]})}function g(t={}){const{wrapper:e}={...(0,s.a)(),...t.components};return e?(0,r.jsx)(e,{...t,children:(0,r.jsx)(d,{...t})}):d(t)}},1151:(t,e,n)=>{n.d(e,{Z:()=>l,a:()=>a});var r=n(7294);const s={},i=r.createContext(s);function a(t){const e=r.useContext(i);return r.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function l(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(s):t.components||s:a(t.components),r.createElement(i.Provider,{value:e},t.children)}}}]);